

#################################################################################################################################################################################


<-- INTRO GIT -->

=> Apa itu git ?
  Git merupakan software berbasis Version Control System (VCS) yang bertugas untuk mencatat perubahan seluruh file atau repository suatu project. Version Control System (VCS) itu sendiri merupakan sebuah sistem yang melakukan source code management (SCM) )untuk mengelola perubahan di setiap dokumen, program komputer, website, dan kumpulan pemrograman lainnya. Developer software biasa menggunakan Git untuk distributed revision (VCS terdistribusi), hal ini bertujuan untuk menyimpan database tidak hanya ke satu tempat. Namun semua orang yang terlibat dalam penyusunan kode dapat menyimpan database ini.

=> Manfaat menggunakan git ?
  > Bisa menyimpan seluruh versi code.
  > Mempermudah kolaborasi antar programmer dalam menciptakan sistem.
  > Bisa berkontribusi di proyek open source.
  > Memudahkan tracking terhadap perubahan yg telah dibuat.
  > Memahami cara deploy modern.
  > Dsb.
  
=> layanan cloud yang berguna untuk menyimpan dan mengelola sebuah project git ?
  <> GitHub adalah sebuah website dan layanan berbasis cloud bagi para developer untuk menyimpan dan mengelola kode, serta mendokumentasikan dan mengontrol perubahannya.
  
  <> GitLab adalah layanan mirip github yang dapat digunakan organisasi untuk menyediakan manajemen internal git repositories. Ini adalah sistem manajemen Git-repository yang di-host-sendiri yang menjaga code private pengguna dan dapat dengan mudah menyebarkan perubahan kode.
  
  <> Bitbucket adalah manajemen repositori Git yang dikembangkan khusus untuk tim profesional. Hub pusat untuk menangani semua repositori git berkolaborasi pada kode sumber dan memandu semua siklus pengembangan perangkat lunak. Ini adalah bagian dari keluarga Atlassian dengan alat-alat seperti Confluence, Jira dan lainnya yang dibuat untuk mendukung tim teknis untuk mengeksplorasi seluruh potensi. Penyebaran Bitbucket dibuat dalam tiga opsi berbeda. Mereka adalah cloud Bitbucket, pusat data Bitbucket, dan Server Bitbucket.


<-- FUNDAMENTAL GIT -->

=> Ada empat elemen dasar dalam Git Workflow, yaitu Working Directory, Staging Area, Local Repository dan Remote Repository.

<> Berikut perintah perintah yang sering digunakan dalam mengoperasikan git
  > Git init, Digunakan untuk menginisialisasi repository, Atau memberi tahu folder saat ini akan dijadikan repository. Perintah ini merupakan hal wajib yang harus dilakukan dalam membuat sebuah repository karena jika tidak diinisialisasi git tidak bisa beroperasi.
  > Git config, Digunakan untuk konfigurasi email dan username, biasanya disamakan dengan akun github/gitlab, Config global untuk konfigurasi server, Config local untuk konfigurasi local. Untuk melihat semua konfigurasi bisa menggunakan perintah git config --list.
  > Git status, Digunakan untuk mengetahui status file (Untracked/staging aera/modified).
  > Git add, Untuk memasukan file ke staging area.
  > Git commit, Digunakan untuk memberikan catatan perubahan yang telah dilakukan.
  > Git log, Digunakan untuk melihat riwayat commit, jika riwayatnya banyak biasanya untuk keluar menekan tombol "Q".
  > Git clone, Digunakan untuk  mengcopy repo dari server.
  > Git remote, Semacam api  untuk berinteraksi dari client dengan server.
  > Git push, Untuk mengirim commit ke server.
  > Git pull, Untuk mengambil commit dari server jika ada perubahandi server yang dibuat oleh branch lain.
  

<-- GIT BRANCH -->

=> Apa itu git branch ?
  > git branch adalah membuat cabang dari repositori utama dan melanjutkan melakukan pekerjaan pada cabang yang baru tersebut tanpa perlu khawatir mengacaukan yang utama.

=> Manfaat git branch ?
  > parallel developements dan bisa digunakan dalam memanajemen pengembangan. misalnya test branch, unstable, stable branch.

=> kapan git branch dibutuhkan ? 
  > Pada saat mengembangkan fitur baru.
  
<> Berikut perintah perintah yang sering digunakan dalam mengoperasikan git branch
 >Git Branch, digunakan untuk melihat semua branch (local).
 > Git Branch --all, melihat semua branch (global).
 > Git Branch nama_branch, membuat branch baru.
 > Git checkout nama_branch, untuk berpindah branch.
 > Git branch -d nama_branch, untuk menghapus branch.
 > Git merge nama_branch, untuk menggabungkan commit dari 2 branch, Relatif pada branch yg aktif saat ini, dan untuk melakukan merge harus dipastikan tidak file yg belum di commit.

<> Conflict pada branch (bentrokan antar branch)
 > Kondisi yang terjadi ketika merging 2 branch yang memiliki 2 perubahan pada file yang sama, Ketika conflict kita tidak bisa melakukan commit. Untuk melakukan commit conflict harus diselesaikan terlebih dahulu.
 
 
<-- GIT GUI --> 
 => sebelumnya kita membahas git versi cli sekarang kita akan membahas git versi GUI dan untuk aplikasinya sendiri saya menggunakan sourcetree sebenarnya banyak aplikasi git berbasis GUi yg lain cuma yg saya pelajari sourcetree dari eduwork hehehe..
 
 <> SOURCETREE
  > software git berbasis GUI untuk memudahkan dalam mengoperasikan git.
  > sorcetree mudah digunakan karena tidak harus bisa perintah dasar terminal atau powershell. solving conflict lebih mudah dan mempercepat kinerja. 

 => Solving conflict menggunakan sourcetree
  > Dari SourceTree, klik Tools-> Options. Kemudian pada tab "General", pastikan untuk mencentang kotak untuk memungkinkan SourceTree untuk memodifikasi file konfigurasi Git Anda. Kemudian beralih ke tab "Diff". Di bagian bawah, gunakan drop down untuk memilih program eksternal yang ingin digunakan untuk melakukan diff dan penggabungan. Saya telah menginstal Diff merge. Setelah selesai, klik OK. Sekarang ketika ada penggabungan, kita bisa masuk di bawah Tindakan-> Selesaikan Konflik-> Luncurkan Alat Gabung Eksternal.


#################################################################################################################################################################################
